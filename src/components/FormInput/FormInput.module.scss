@use "../styles/variables" as *;

.formGroup {
  position: relative;
  display: flex;
  flex-direction: column;
  margin-bottom: 20px;
}

.input {
  padding: 12px 16px;
  border: 1px solid var(--input-border);
  background: var(--background);
  border-radius: 6px;
  color: var(--foreground);
  font-size: 14px;
  outline: none;
  transition: all $timing-fast $ease-smooth;
  font-family: inherit;
  height: 44px;

  &::placeholder {
    color: transparent;
  }

  &:focus {
    border-color: $input-border-focus;
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);
  }

  // Dark theme specific styling
  [data-theme="dark"] & {
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);

    &:focus {
      box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.3),
        inset 0 1px 2px rgba(0, 0, 0, 0.1);
    }
  }

  // ✅ Ngăn chặn tất cả tương tác khi disabled hoặc readonly
  &:disabled,
  &[readonly] {
    pointer-events: none !important;
    user-select: none !important;
    -webkit-user-select: none !important;
    -moz-user-select: none !important;
    -ms-user-select: none !important;

    &::-webkit-outer-spin-button,
    &::-webkit-inner-spin-button {
      -webkit-appearance: none;
      margin: 0;
    }
  }
}

.select {
  padding: 12px 35px 12px 16px;
  border: 1px solid var(--input-border);
  border-radius: 6px;
  background: var(--background);
  color: var(--foreground);
  font-size: 14px;
  outline: none;
  transition: all $timing-fast $ease-smooth;
  appearance: none;
  cursor: pointer;
  font-family: inherit;
  height: 44px;

  // Dynamic arrow color based on theme
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%23374151' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 12px center;
  background-repeat: no-repeat;
  background-size: 12px;

  [data-theme="dark"] & {
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%23d1d5db' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    box-shadow: inset 0 1px 2px rgba(0, 0, 0, 0.1);
  }

  &:focus {
    border-color: $input-border-focus;
    box-shadow: 0 0 0 2px rgba(59, 130, 246, 0.2);
  }

  option {
    background: var(--background);
    color: var(--foreground);
    padding: 8px;
  }

  // ✅ Ngăn chặn tương tác khi disabled
  &:disabled {
    pointer-events: none !important;
    user-select: none !important;
    cursor: not-allowed !important;

    &::-ms-expand {
      display: none;
    }

    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
  }
}

.label {
  position: absolute;
  left: 16px;
  top: 50%;
  transform: translateY(-50%);
  background: transparent;
  color: $input-label-color;
  font-size: 14px;
  font-weight: 400;
  padding: 0 4px;
  pointer-events: none !important;
  transition: all $timing-fast $ease-smooth;
  z-index: 1;
  user-select: none !important;
}

// Label nhảy lên khi có value
.hasValue .label {
  top: 0;
  left: 12px;
  font-size: 12px;
  color: var(--foreground);
  background: var(--background);
  transform: translateY(-50%);
}

.disabled {
  pointer-events: none !important;
  user-select: none !important;

  .input,
  .select {
    background: var(--input-disabled-bg);
    color: var(--foreground);
    cursor: not-allowed !important;
    border-color: var(--input-border);
    opacity: $input-disabled-opacity;
    pointer-events: none !important;
    user-select: none !important;

    &:hover,
    &:focus,
    &:active {
      border-color: var(--input-border) !important;
      outline: none !important;
      box-shadow: none !important;
    }
  }

  .label {
    color: var(--foreground);
    opacity: $input-disabled-opacity;
  }
}

.readOnly {
  .input {
    background: var(--input-disabled-bg);
    cursor: not-allowed !important;
    opacity: 0.8;
    pointer-events: none !important;
    user-select: none !important;

    &:focus {
      border-color: var(--input-border);
      box-shadow: none;
    }

    &:hover,
    &:focus,
    &:active {
      border-color: var(--input-border) !important;
      outline: none !important;
      box-shadow: none !important;
    }
  }
}

.error {
  .input,
  .select {
    border-color: var(--price-color);

    &:focus {
      border-color: var(--price-color);
      box-shadow: 0 0 0 2px rgba(231, 3, 3, 0.2);
    }
  }

  .label {
    color: var(--price-color);
  }

  &.hasValue .label {
    color: var(--price-color);
  }
}
