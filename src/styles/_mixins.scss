@use "sass:math";
@use "sass:map";

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-start {
  display: flex;
  align-items: flex-start;
}

@mixin flex-center-column {
  @include flex-center;
  flex-direction: column;
}
@mixin flex-start-column {
  @include flex-start;
  flex-direction: column;
}

@mixin flex-center-vert {
  display: flex;
  align-items: center;
}

@mixin flex-center-horiz {
  display: flex;
  justify-content: center;
}

@mixin list-style-none {
  list-style: none;
  padding: 0;
  margin: 0;
}

@mixin flex-center-space-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin font-size(
  $font-size,
  $line-height: normal,
  $letter-spacing: normal,
  $font-weight: normal
) {
  font-size: calc($font-size / 16) * 1rem;
  font-weight: $font-weight;

  @if $line-height == normal {
    line-height: normal;
  } @else {
    line-height: math.div($line-height, $font-size);
  }

  @if $letter-spacing == normal {
    letter-spacing: normal;
  } @else {
    letter-spacing: #{math.div($letter-spacing, 100) *
      math.div($font-size, 16)}rem;
  }
}

@mixin cover-background {
  background-repeat: no-repeat;
  background-size: cover;
  background-position: center;
}

@mixin pseudo(
  $width: 100%,
  $height: 100%,
  $display: inline-block,
  $pos: absolute,
  $content: ""
) {
  content: $content;
  display: $display;
  position: $pos;
  @include box($width, $height);
}

@mixin fade($type) {
  @if $type== "hide" {
    visibility: hidden;
    opacity: 0;
    transition: visibility 1s, opacity 1s;
  } @else if $type== "show" {
    visibility: visible;
    opacity: 1;
    transition: visibility 1s, opacity 1s;
  }
}

$breakpoints: (
  xs: 375px,
  sm: 480px,
  md: 768px,
  lg: 1024px,
  xl: 1280px,
);

@mixin respond($breakpoint) {
  $size: map.get($breakpoints, $breakpoint);
  @if $size {
    @media (max-width: $size) {
      @content;
    }
  } @else {
    @warn "Breakpoint #{$breakpoint} not found in $breakpoints map.";
  }
}
